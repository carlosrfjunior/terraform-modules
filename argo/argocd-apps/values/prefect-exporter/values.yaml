fullnameOverride: prefect-exporter
serviceMonitor:
  enabled: true
## -- Custom PrometheusRules to be defined
# ref: https://github.com/coreos/prometheus-operator#customresourcedefinitions
# prometheusRule:
#   enabled: true
#   rules:
#     - alert: PrefectServerDown
#       expr: sum by (pod, namespace) (kube_pod_info{namespace="prefect", pod=~"prefect-server.*"}) == 0
#       for: 0m
#       labels:
#         severity: critical
#       annotations:
#         summary: Prefect server is down
#         description: There are no Prefect server pods in the "prefect" namespace

#     - alert: PrefectDeploymentsAllPaused
#       expr: (count by (namespace) (prefect_info_deployment) == bool count by (namespace) (prefect_info_deployment{is_schedule_active="False"})) == 1
#       for: 0m
#       labels:
#         severity: warning
#       annotations:
#         summary: All deployments are paused
#         description: "All deployments are paused\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

#     - alert: PrefectAgentWorkersNotRunning
#       expr: sum(kube_deployment_status_replicas{deployment=~".*agent|.*worker"}) == 0
#       for: 0m
#       labels:
#         severity: critical
#       annotations:
#         summary: All agent and worker are not running
#         description: "All agent and worker are not running\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

#     - alert: PrefectWorkPoolNotAllow
#       expr: prefect_work_pools_total == 0
#       for: 0m
#       labels:
#         severity: critical
#       annotations:
#         summary: Worker pool not allowed
#         description: "Worker pool not allowed\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

#     - alert: PrefectWorkPoolsAllPaused
#       expr: (count by (namespace) (prefect_work_pools_total) == bool count by (namespace) (prefect_info_work_pools{is_paused="True"})) == 1
#       for: 0m
#       labels:
#         severity: warning
#       annotations:
#         summary: All work pools are paused
#         description: "All work pools are paused\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

#     - alert: PrefectWorkQueueNotAllow
#       expr: prefect_work_queues_total == 0
#       for: 0m
#       labels:
#         severity: critical
#       annotations:
#         summary: Worker queue not allowed
#         description: "Worker queue not allowed\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

#     - alert: PrefectWorkQueuesAllPaused
#       expr: (count by (namespace) (prefect_work_queues_total) == bool count by (namespace) (prefect_info_work_queues{is_paused="True"})) == 1
#       for: 0m
#       labels:
#         severity: warning
#       annotations:
#         summary: All work queues are paused
#         description: "All work queues are paused\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

#     - alert: PrefectFlowRunCrashedOrFailed
#       expr: group by (flow_name, flow_run_name, namespace) (count_over_time(prefect_info_flow_runs{state_name=~"Failed|Crashed"}[1m]))
#       for: 0m
#       labels:
#         severity: critical
#       annotations:
#         summary: Flow Run {{ $labels.flow_name }} {{ $labels.state_name }} (Flow {{ $labels.flow_name }})
#         description: "Flow Run failed or crashed\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
